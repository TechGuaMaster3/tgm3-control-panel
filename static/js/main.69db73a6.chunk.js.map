{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["paramsId","URLSearchParams","window","location","search","get","paramsToken","channel","client","tmi","Client","options","debug","messagesLogLevel","connection","reconnect","secure","identity","username","password","channels","tgm3Theme","createMuiTheme","palette","primary","main","secondary","typography","fontFamily","App","state","id","text","tmiInit","connect","then","data","catch","err","console","log","on","target","context","msg","self","handleClick","name","event","say","handleRecallClick","handleIdChange","value","setState","handleTextChange","this","theme","className","style","padding","Container","margin","Grid","container","spacing","item","xs","backgroundColor","height","display","flexDirection","alignItems","justifyContent","Typography","variant","component","color","soundJson","list","map","index","Button","onClick","command","TextField","Paper","label","size","width","onChange","multiline","rows","src","alt","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.69db73a6.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Container, Grid, Button, TextField, Paper, Typography } from '@material-ui/core/';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport { ThemeProvider as MuiThemeProvider } from '@material-ui/core/styles';\r\nimport tmi from 'tmi.js'\r\nimport soundJson from './sound.json'\r\nimport './App.css';\r\n\r\nconst paramsId = new URLSearchParams(window.location.search).get(\"id\");\r\nconst paramsToken = new URLSearchParams(window.location.search).get(\"token\");\r\nconst channel = \"zatd39\"\r\nconst client = new tmi.Client({\r\n  options: { debug: true, messagesLogLevel: \"info\" },\r\n  connection: {\r\n    reconnect: true,\r\n    secure: true\r\n  },\r\n  identity: {\r\n    username: (paramsId) ? paramsId : 'justinfan123456',\r\n    password: (paramsToken) ? paramsToken : ''\r\n  },\r\n  channels: [channel]\r\n});\r\n\r\nconst tgm3Theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#009688',\r\n    },\r\n    secondary: {\r\n      main: '#ff1744',\r\n    },\r\n  },\r\n  typography: {\r\n    fontFamily: 'Noto Sans TC,sans-serif',\r\n  },\r\n});\r\n\r\nclass App extends Component {\r\n  state = {\r\n    id: \"\",\r\n    text: \"\",\r\n  }\r\n  tmiInit = () => {\r\n    client.connect().then((data) => {\r\n    }).catch((err) => {\r\n      console.log(err)\r\n    });\r\n\r\n    client.on(\"message\", (target, context, msg, self) => {\r\n\r\n    });\r\n  };\r\n\r\n  handleClick = name => event => {\r\n    client.say(channel, name);\r\n  };\r\n\r\n  handleRecallClick = name => event => {\r\n    if (this.state.id) {\r\n      if (name == \"!cheer\") {\r\n        if (this.state.text) {\r\n          client.say(channel, name + ' ' + this.state.id);\r\n          client.say(channel, this.state.text);\r\n        }\r\n      }\r\n      else if (!this.state.text) {\r\n        client.say(channel, name + ' ' + this.state.id);\r\n        client.say(channel, \"0\");\r\n      }\r\n      else {\r\n        client.say(channel, name + ' ' + this.state.id);\r\n        client.say(channel, this.state.text);\r\n      }\r\n    }\r\n  };\r\n\r\n  handleIdChange = () => event => {\r\n    var msg = event.target.value;\r\n    this.setState({\r\n      id: msg,\r\n    });\r\n  };\r\n\r\n  handleTextChange = () => event => {\r\n    var msg = event.target.value;\r\n    this.setState({\r\n      text: msg,\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.tmiInit();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <MuiThemeProvider theme={tgm3Theme}>\r\n        <div className=\"App\">\r\n          <div style={{ padding: '7px 0px' }}>\r\n            <Container style={{ margin: '7px auto', padding: '15px' }}>\r\n              <Grid container spacing={4}>\r\n                <Grid item xs={12}>\r\n                  <Container style={{ backgroundColor: '#e0f2f1', padding: '15px', height: '200px', display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center' }} >\r\n                    <Typography variant='subtitle2' component='p' style={{ color: '#008076' }}>\r\n                      音效區\r\n                    </Typography>\r\n                    <div>\r\n                    {soundJson.list.map((data, index) => (\r\n                      <Button\r\n                        variant='contained'\r\n                        color=\"primary\"\r\n                        style={{ margin: '10px 10px' }}\r\n                        onClick={this.handleClick(\"!sound \" + data.command)}\r\n                      >{data.name}</Button>\r\n                    ))}\r\n                    </div>\r\n                  </Container>\r\n                </Grid>\r\n                <Grid item xs={8}>\r\n                  <Container style={{ backgroundColor: '#e0f2f1', padding: '15px', height: '200px', display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center' }} >\r\n                    <Typography variant='subtitle2' component='p' style={{ color: '#008076' }}>\r\n                      通知測試\r\n                    </Typography>\r\n                    <div>\r\n                      <Button\r\n                        variant='contained'\r\n                        color=\"primary\"\r\n                        style={{ margin: '10px 10px' }}\r\n                        onClick={this.handleClick(\"!彩學好帥\")}\r\n                      >Bit</Button>\r\n                      <Button\r\n                        variant='contained'\r\n                        color=\"primary\"\r\n                        style={{ margin: '10px 10px' }}\r\n                        onClick={this.handleClick(\"!小狗><\")}\r\n                      >Donate</Button>\r\n                      <Button\r\n                        variant='contained'\r\n                        color=\"primary\"\r\n                        style={{ margin: '10px 10px' }}\r\n                        onClick={this.handleClick(\"!戴口罩勤洗手要消毒\")}\r\n                      >Tier1</Button>\r\n                      <Button\r\n                        variant='contained'\r\n                        color=\"primary\"\r\n                        style={{ margin: '10px 10px' }}\r\n                        onClick={this.handleClick(\"!尊爵不凡\")}\r\n                      >Tier3</Button>\r\n                    </div>\r\n                  </Container>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                  <Container style={{ backgroundColor: '#e0f2f1', padding: '15px', height: '200px', display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center' }} >\r\n                    <Typography variant='subtitle2' component='p' style={{ color: '#008076' }}>\r\n                      Basilisk Time\r\n                    </Typography>\r\n                    <div>\r\n                      <Button\r\n                        variant='contained'\r\n                        color=\"primary\"\r\n                        style={{ margin: '10px 10px' }}\r\n                        onClick={this.handleClick(\"!basilisktime on\")}\r\n                      >ON</Button>\r\n                      <Button\r\n                        variant='contained'\r\n                        style={{ margin: '10px 10px' }}\r\n                        onClick={this.handleClick(\"!basilisktime off\")}\r\n                      >OFF</Button>\r\n                    </div>\r\n                  </Container>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Container style={{ backgroundColor: '#e0f2f1', padding: '15px' }} >\r\n                    <Typography variant='subtitle2' component='p' style={{ color: '#008076' }}>\r\n                      手動 Recall\r\n                    </Typography>\r\n                    <TextField component={Paper}\r\n                      label=\"Twitch id\"\r\n                      variant='outlined'\r\n                      id=\"outlined-size-normal\"\r\n                      size=\"small\"\r\n                      style={{ width: '85%', margin: '10px 0px' }}\r\n                      onChange={this.handleIdChange()}\r\n                    />\r\n                    <TextField component={Paper}\r\n                      multiline\r\n                      label=\"Text\"\r\n                      variant='outlined'\r\n                      rows={7}\r\n                      id=\"outlined-size-normal\"\r\n                      size=\"small\"\r\n                      style={{ width: '85%', margin: '5px 0px' }}\r\n                      onChange={this.handleTextChange()}\r\n                    />\r\n                    <div style={{ padding: '15px 0px' }}>\r\n                      <Button\r\n                        variant='contained'\r\n                        color=\"primary\"\r\n                        style={{ margin: '0px 10px' }}\r\n                        onClick={this.handleRecallClick(\"!sub\")}\r\n                      >Sub Tier1</Button>\r\n                      <Button\r\n                        variant='contained'\r\n                        color=\"primary\"\r\n                        style={{ margin: '0px 10px' }}\r\n                        onClick={this.handleRecallClick(\"!subt3\")}\r\n                      >Sub Tier3</Button>\r\n                      <Button\r\n                        variant='contained'\r\n                        color=\"primary\"\r\n                        style={{ margin: '0px 10px' }}\r\n                        onClick={this.handleRecallClick(\"!cheer\")}\r\n                      >Cheer</Button>\r\n                    </div>\r\n                  </Container>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                  <Container style={{ backgroundColor: '#e0f2f1', padding: '15px', height: '200px', display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center' }} >\r\n                    <img src='https://cdn.discordapp.com/emojis/809889506089893888.png?v=1' alt='logo' />\r\n                  </Container>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                  <Container style={{ backgroundColor: '#e0f2f1', padding: '15px', height: '200px', display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center' }} >\r\n                    <Button\r\n                      variant='contained'\r\n                      color=\"secondary\"\r\n                      style={{ margin: '10px 10px' }}\r\n                      onClick={this.handleClick(\"!reload2.0\")}\r\n                    >ALERTBOX Reload</Button>\r\n                  </Container>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                  <Container style={{ backgroundColor: '#e0f2f1', padding: '15px', height: '200px', display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center' }} >\r\n                    <img src='https://cdn.discordapp.com/emojis/809889506089893888.png?v=1' alt='logo' />\r\n                  </Container>\r\n                </Grid>\r\n              </Grid>\r\n            </Container>\r\n\r\n          </div>\r\n        </div>\r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}